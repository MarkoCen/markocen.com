div
    p.
        Since last week, I started to rebuilding my personal site from scratch,
        and I have to say, it was really fun! Now the site hosted on Linode, and use Node as its backend server.
        If time possible (My job running on super tight schedule...), I would like to put more features on it, such as Socket.io, OAuth, etc.
        My old blog hosted on <span class="em">Github pages</span>, which is a perfect place for simple blog site,
        all you need to do is write/upload blogs and there you go! BUT yeah, it can only host static files, no DB manipulation (Firebase maybe?),
        no WebSocket, no server-side magic, it is SO simple! I want a full-stack website where I can fully charge :\... So it's time to move...

    p.
        The reason I choose <span class="em">Linode</span> for new website hosting, is that they provide very cost-effective price plan rather than AWS or Docker,
        and not like Heroku, Linode provide you a fully configurable system, this may take you more time to run a website at first time,
        but since you can fully control the environment, the up-coming maintenance will become much easier.
        Meanwhile, I use <span class="em">Imcapsula</span> CDN (they provide free plan for personal site!) to cache static files, therefore speeding up
        my website accessing time at world wide.

    p.
        When I first start to develop my new website, I was thinking about what front-end framework I should use, should I use Angular 1.x/2 or React?
        Or should I give a try on Aurelia? Too many frameworks out there and my conclusion is that, they are all too heavy for my site! A light-weight
        library should be enough to support my front-end works, so I decided to choose... <span class="em">VanillaJS</span>!
        Yes! The most fastest front-end library in this world! If you check source code, you may notice there are two global variables in this website:
        <span class="code-inline">$</span> and <span class="code-inline">_</span>, except they have same variable name with jQuery and Lodash
        (no time for creative writing!), I wrote them by plain javascript and used them as my super-light front-end library  (less than 1KB before gzipped...)
        They have enough features for a blog site, such as AJAX wrapper, Promise, DOM Helper, Util functions...
        Sometimes I have forgot how beautiful plain javascript is...
